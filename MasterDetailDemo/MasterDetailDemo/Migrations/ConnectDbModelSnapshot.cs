// <auto-generated />
using MasterDetailDemo.ConnectToDb;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace MasterDetailDemo.Migrations
{
    [DbContext(typeof(ConnectDb))]
    partial class ConnectDbModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Entities.Models.PortfolioAccount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AccountName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("AccountNumber")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<DateTime>("EntryDate");

                    b.Property<int>("EntryUserId");

                    b.HasKey("Id");

                    b.ToTable("PortfolioAccount");
                });

            modelBuilder.Entity("Entities.Models.Stock", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("EntryDate");

                    b.Property<int>("EntryUserId");

                    b.Property<string>("StockName")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("StockSymbol")
                        .IsRequired()
                        .HasMaxLength(15);

                    b.HasKey("Id");

                    b.ToTable("Stock");
                });

            modelBuilder.Entity("Entities.Models.StockReceiveDetl", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("MastId");

                    b.Property<DateTime>("OwnershipDate");

                    b.Property<int>("Quantity")
                        .HasColumnName("Qty");

                    b.Property<decimal>("Rate");

                    b.Property<int>("StockId");

                    b.HasKey("Id");

                    b.HasIndex("MastId");

                    b.HasIndex("StockId");

                    b.ToTable("StockReceiveDetl");
                });

            modelBuilder.Entity("Entities.Models.StockReceiveMast", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("EntryDate");

                    b.Property<int>("EntryUserId");

                    b.Property<int>("PortfolioAcId");

                    b.Property<string>("Remarks")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<DateTime>("ValueDate");

                    b.HasKey("Id");

                    b.HasIndex("PortfolioAcId");

                    b.ToTable("StockReceiveMast");
                });

            modelBuilder.Entity("Entities.Models.StockReceiveDetl", b =>
                {
                    b.HasOne("Entities.Models.StockReceiveMast", "StockReceiveMast")
                        .WithMany()
                        .HasForeignKey("MastId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Entities.Models.Stock", "Stock")
                        .WithMany()
                        .HasForeignKey("StockId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Entities.Models.StockReceiveMast", b =>
                {
                    b.HasOne("Entities.Models.PortfolioAccount", "PortfolioAccount")
                        .WithMany()
                        .HasForeignKey("PortfolioAcId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
